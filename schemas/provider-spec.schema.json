{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://specado.com/schemas/provider-spec.schema.json",
    "title": "ProviderSpec",
    "description": "Provider capability specification for LLM API translation",
    "type": "object",
    "additionalProperties": false,
    "required": ["spec_version", "provider", "models"],
    "properties": {
      "spec_version": {
        "description": "Specification version (semver)",
        "type": "string",
        "pattern": "^\\d+\\.\\d+\\.\\d+$"
      },
      "provider": {
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "base_url", "headers", "auth"],
        "properties": {
          "name": { "type": "string", "minLength": 1 },
          "base_url": { "type": "string", "format": "uri" },
          "headers": {
            "type": "object",
            "description": "Static headers; values may include ${ENV:VAR} placeholders.",
            "additionalProperties": { "type": "string" }
          },
          "auth": {
            "description": "Authentication configuration",
            "type": "object",
            "additionalProperties": false,
            "required": ["type", "header_name"],
            "properties": {
              "type": { 
                "description": "Authentication type",
                "type": "string", 
                "enum": ["bearer", "api-key", "basic", "custom"] 
              },
              "header_name": { 
                "description": "Header name for authentication",
                "type": "string", 
                "default": "Authorization" 
              },
              "value_template": { 
                "description": "Template for auth value (e.g., 'Bearer ${ENV:API_KEY}')",
                "type": "string" 
              }
            }
          },
          "capabilities": {
            "description": "Provider-wide capabilities",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "supports_rag": { 
                "description": "Supports retrieval-augmented generation",
                "type": "boolean", 
                "default": false 
              },
              "supports_conversation_persistence": { 
                "description": "Supports persistent conversation IDs",
                "type": "boolean", 
                "default": false 
              },
              "supports_live_sessions": { 
                "description": "Supports live/streaming sessions",
                "type": "boolean", 
                "default": false 
              },
              "supports_multimodal_output": { 
                "description": "Can generate non-text outputs",
                "type": "boolean", 
                "default": false 
              }
            }
          }
        }
      },
  
      "models": {
        "type": "array",
        "minItems": 1,
        "items": { "$ref": "#/$defs/Model" }
      },
      
      "notes": {
        "description": "Additional notes about provider requirements or limitations",
        "type": "string"
      }
    },
  
    "$defs": {
      "Model": {
        "description": "Model specification within a provider",
        "type": "object",
        "additionalProperties": false,
        "required": ["id", "family", "endpoints", "input_modes", "tooling", "json_output", "parameters", "constraints", "mappings", "response_normalization"],
        "properties": {
          "description": {
            "description": "Model description and use cases",
            "type": "string"
          },
          "id": { 
            "description": "Model identifier",
            "type": "string", 
            "minLength": 1 
          },
          "aliases": { 
            "description": "Alternative names/aliases for the model",
            "type": "array", 
            "items": { "type": "string" }
          },
          "family": { 
            "description": "Model family (e.g., gpt-4, claude-3)",
            "type": "string", 
            "minLength": 1 
          },
          "reasoning": {
            "description": "Reasoning capabilities (for models that support chain-of-thought)",
            "type": "object",
            "properties": {
              "supported": { "type": "boolean" },
              "effort_levels": {
                "type": "array",
                "items": { "type": "string" }
              },
              "default_effort": { "type": "string" },
              "internal_chain_of_thought": { "type": "boolean" },
              "optimized_for": { "type": "string" },
              "summary_modes": {
                "type": "array",
                "items": { "type": "string" }
              },
              "default_summary": { "type": "string" }
            }
          },
          "verbosity": {
            "description": "Verbosity control capabilities",
            "type": "object",
            "properties": {
              "supported": { "type": "boolean" },
              "levels": {
                "type": "array",
                "items": { "type": "string" }
              },
              "default_level": { "type": "string" }
            }
          },
  
          "endpoints": {
            "description": "API endpoints for this model",
            "type": "object",
            "additionalProperties": false,
            "required": ["chat_completion", "streaming_chat_completion"],
            "properties": {
              "chat_completion": { "$ref": "#/$defs/EndpointConfig" },
              "streaming_chat_completion": { "$ref": "#/$defs/EndpointConfig" }
            }
          },
  
          "input_modes": {
            "type": "object",
            "additionalProperties": false,
            "required": ["messages", "single_text", "images"],
            "properties": {
              "messages": { "type": "boolean" },
              "single_text": { "type": "boolean" },
              "images": { "type": "boolean" },
              "audio": { 
                "description": "Supports audio input",
                "type": "boolean",
                "default": false
              },
              "video": { 
                "description": "Supports video input",
                "type": "boolean",
                "default": false
              },
              "documents": { 
                "description": "Supports document/file input",
                "type": "boolean",
                "default": false
              }
            }
          },
  
          "tooling": {
            "type": "object",
            "additionalProperties": false,
            "required": ["tools_supported", "parallel_tool_calls_default", "can_disable_parallel_tool_calls"],
            "properties": {
              "tools_supported": { "type": "boolean" },
              "parallel_tool_calls_default": { "type": "boolean" },
              "can_disable_parallel_tool_calls": { "type": "boolean" },
              "custom_tools": { "type": "boolean" },
              "preambles_supported": { "type": "boolean" },
              "tool_types": {
                "type": "array",
                "items": { "type": "string" }
              },
              "context_free_grammars": { "type": "boolean" },
              "tool_choice_modes": {
                "description": "Supported tool choice modes",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["auto", "none", "required", "any", "specific"]
                }
              },
              "strict_tools_support": {
                "description": "Supports strict tool schema validation",
                "type": "boolean",
                "default": false
              },
              "disable_switch": {
                "type": "object",
                "additionalProperties": false,
                "required": ["path", "value"],
                "properties": {
                  "path": { "type": "string", "minLength": 1 },
                  "value": {}
                }
              }
            }
          },
  
          "json_output": {
            "type": "object",
            "additionalProperties": false,
            "required": ["native_param", "strategy"],
            "properties": {
              "native_param": { "type": "boolean" },
              "strategy": { "type": "string", "enum": ["json_schema", "prompt_only"] },
              "notes": { "type": "string" }
            }
          },
  
          "parameters": {
            "description": "Parameter definitions for the model API",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "type": { "type": "string" },
                "required": { "type": "boolean" },
                "description": { "type": "string" },
                "enum": {
                  "type": "array",
                  "items": {}
                },
                "default": {},
                "minimum": { "type": "number" },
                "maximum": { "type": "number" },
                "properties": { "type": "object" },
                "items": { "type": "object" }
              }
            }
          },
  
          "constraints": {
            "description": "Provider-specific constraints and limits",
            "type": "object",
            "additionalProperties": false,
            "required": ["system_prompt_location", "forbid_unknown_top_level_fields", "mutually_exclusive", "resolution_preferences", "limits"],
            "properties": {
              "system_prompt_location": { 
                "description": "Where system prompts are placed",
                "type": "string", 
                "enum": ["top_level", "message_role", "preamble"] 
              },
              "forbid_unknown_top_level_fields": { 
                "description": "Whether unknown fields cause errors",
                "type": "boolean" 
              },
              "mutually_exclusive": {
                "description": "Fields that cannot be used together",
                "type": "array",
                "items": {
                  "type": "array",
                  "minItems": 2,
                  "items": { "type": "string" }
                }
              },
              "resolution_preferences": {
                "description": "Conflict resolution order",
                "type": "array",
                "items": { "type": "string" }
              },
              "prompt_truncation": {
                "description": "Prompt truncation strategy",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "default_mode": {
                    "description": "Default truncation mode",
                    "type": "string",
                    "enum": ["OFF", "AUTO", "AUTO_PRESERVE_ORDER"]
                  },
                  "supported_modes": {
                    "description": "List of supported truncation modes",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": ["OFF", "AUTO", "AUTO_PRESERVE_ORDER", "START", "END"]
                    }
                  }
                }
              },
              "limits": {
                "description": "Size limits for various fields",
                "type": "object",
                "additionalProperties": false,
                "required": ["max_tool_schema_bytes", "max_system_prompt_bytes"],
                "properties": {
                  "max_tool_schema_bytes": { "type": "integer", "minimum": 0 },
                  "max_system_prompt_bytes": { "type": "integer", "minimum": 0 }
                }
              }
            }
          },

          "mappings": {
            "description": "Field mappings from uniform to provider format",
            "type": "object",
            "additionalProperties": false,
            "required": ["paths", "flags"],
            "properties": {
              "paths": {
                "description": "JSONPath mappings for fields",
                "type": "object",
                "additionalProperties": { "type": "string" }
              },
              "flags": {
                "description": "Feature flags and their mappings",
                "type": "object",
                "additionalProperties": true
              },
              "transformations": {
                "description": "Data transformation rules",
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "description": { "type": "string" },
                    "type": { "type": "string" },
                    "separator": { "type": "string" }
                  }
                }
              }
            }
          },

          "rag_config": {
            "description": "Retrieval-augmented generation configuration",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "connector_param": {
                "description": "Parameter name for RAG connectors",
                "type": "string"
              },
              "document_param": {
                "description": "Parameter name for documents",
                "type": "string"
              },
              "search_queries_param": {
                "description": "Parameter name for search queries only mode",
                "type": "string"
              },
              "web_search_connector": {
                "description": "Identifier for web search connector",
                "type": "string"
              }
            }
          },

          "conversation_management": {
            "description": "Conversation persistence configuration",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "conversation_id_param": {
                "description": "Parameter name for conversation ID",
                "type": "string"
              },
              "history_param": {
                "description": "Parameter name for chat history",
                "type": "string"
              },
              "supports_branching": {
                "description": "Whether conversations can branch",
                "type": "boolean",
                "default": false
              }
            }
          },

          "response_normalization": {
            "description": "Rules for normalizing provider responses",
            "type": "object",
            "additionalProperties": false,
            "required": ["sync", "stream"],
            "properties": {
              "sync": {
                "description": "Synchronous response normalization",
                "type": "object",
                "additionalProperties": false,
                "required": ["content_path", "finish_reason_path", "finish_reason_map"],
                "properties": {
                  "content_path": { 
                    "description": "JSONPath to response content",
                    "type": "string",
                    "pattern": "^[\\w\\[\\]\\.]+$"
                  },
                  "finish_reason_path": { 
                    "description": "JSONPath to finish reason",
                    "type": "string",
                    "pattern": "^[\\w\\[\\]\\.]+$"
                  },
                  "finish_reason_map": {
                    "description": "Map provider finish reasons to uniform ones",
                    "type": "object",
                    "additionalProperties": { "type": "string" }
                  },
                  "reasoning_path": { 
                    "description": "JSONPath to reasoning content",
                    "type": "string"
                  },
                  "tool_calls_path": { 
                    "description": "JSONPath to tool calls",
                    "type": "string"
                  },
                  "response_id_path": { 
                    "description": "JSONPath to response ID",
                    "type": "string"
                  },
                  "incomplete_details_path": { 
                    "description": "JSONPath to incomplete details",
                    "type": "string"
                  },
                  "output_array_path": { 
                    "description": "JSONPath to output array",
                    "type": "string"
                  }
                }
              },
              "stream": {
                "description": "Stream response normalization",
                "type": "object",
                "additionalProperties": false,
                "required": ["protocol", "event_selector"],
                "properties": {
                  "protocol": { 
                    "description": "Streaming technology (over transport protocol)",
                    "type": "string",
                    "enum": ["sse", "websocket", "ndjson", "http2-stream"]
                  },
                  "event_selector": {
                    "description": "Event routing rules",
                    "type": "object",
                    "additionalProperties": false,
                    "required": ["type_path", "routes"],
                    "properties": {
                      "type_path": { 
                        "description": "JSONPath to event type",
                        "type": "string",
                        "pattern": "^[\\w\\[\\]\\.]+$"
                      },
                      "routes": {
                        "description": "Event routing configuration",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": ["when", "emit"],
                          "properties": {
                            "when": { 
                              "description": "Event type to match",
                              "type": "string" 
                            },
                            "emit": { 
                              "description": "Event to emit",
                              "type": "string",
                              "enum": ["start", "delta", "tool", "stop", "error"]
                            },
                            "text_path": { 
                              "type": "string",
                              "pattern": "^[\\w\\[\\]\\.]+$"
                            },
                            "name_path": { 
                              "type": "string",
                              "pattern": "^[\\w\\[\\]\\.]+$"
                            },
                            "args_path": { 
                              "type": "string",
                              "pattern": "^[\\w\\[\\]\\.]+$"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
  
      "EndpointConfig": {
        "description": "API endpoint configuration",
        "type": "object",
        "additionalProperties": false,
        "required": ["method", "path", "protocol"],
        "properties": {
          "method": { 
            "description": "HTTP method",
            "type": "string", 
            "enum": ["POST", "GET", "PUT", "PATCH", "DELETE"] 
          },
          "path": { 
            "description": "URL path",
            "type": "string", 
            "pattern": "^/.*" 
          },
          "protocol": {
            "description": "Transport protocol",
            "type": "string",
            "enum": ["http", "https", "ws", "wss"]
          },
          "query": {
            "description": "Query parameters",
            "type": "object",
            "additionalProperties": { "type": "string" }
          },
          "headers": {
            "description": "Additional headers for this endpoint",
            "type": "object",
            "additionalProperties": { "type": "string" }
          }
        }
      }
    }
  }
  